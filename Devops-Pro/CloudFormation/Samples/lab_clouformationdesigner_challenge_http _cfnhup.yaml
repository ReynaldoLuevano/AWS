Parameters:
  InstanceType:
    Type: 'String'
    Default: 't3.micro'
    AllowedValues: ['t3.micro', 't2.micro']
    Description: 'Instance Type'
  LatestAMIID:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Description: 'Latest AMI Image'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64'
Resources:
  WebServer:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          start:
            - 'configStart'
          update:
            - 'configUpdate'
        configUpdate:
          files:
            /var/www/html/index.html:
              content: '<!DOCTYPE html><body><h1>Hola desde cfn-hup</h1></body></html>'
        configStart:
          files:
            /var/www/html/index.html:
              content: '<!DOCTYPE html><body><h1>Hola desde cfn-init</h1></body></html>'
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackName}
                region=${AWS::Region}
                interval=1
                verbose=true
              mode: '000400'
              owner: 'root'
              group: 'root'
            /etc/cfn/hooks.conf:
              content: !Sub |
                [my-update-hook]
                triggers=post.remove
                path=Resources.WebServer
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource WebServer --region ${AWS::Region} -c update
                runas=root
          packages:
            yum:
              httpd: []
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - '/etc/cfn/cfn-hup.conf'
                  - '/etc/cfn/hooks.conf'
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAMIID
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - 'sg-02c298018ac1698da'
          SubnetId: 'subnet-00e13233afdcd6388'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource WebServer --region ${AWS::Region} -c start
      Tags:
        - Key: 'Name'
          Value: 'Websever'
Outputs:
  PublicIp:
    Value: !GetAtt WebServer.PublicIp     
  

